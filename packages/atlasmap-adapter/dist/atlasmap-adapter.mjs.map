{"version":3,"file":"atlasmap-adapter.mjs","sources":["../src/DataMapperAdapter.tsx"],"sourcesContent":["import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n"],"names":["const","runtime","require","polyfills","styles","scripts","vendor","main","DocumentType","InspectionType","DataMapperAdapter","constructor","props","messageChannel","MessageChannel","onIframeLoad","bind","onMessages","componentDidMount","iframe","addEventListener","componentWillReceiveProps","nextProps","_","prevPayload","nextPayload","equal","updateDataMapperApp","shouldComponentUpdate","componentWillUnmount","removeEventListener","messagePort","port1","onmessage","contentWindow","postMessage","port2","event","data","message","onMappings","payload","mappings","documentId","inputDataShape","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDataShape","outputDescription","outputDocumentType","outputInspectionType","outputName","render","srcDoc","extraProps","allowtransparency","React","style","width","height","frameBorder","ref","el","this"],"mappings":"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"}