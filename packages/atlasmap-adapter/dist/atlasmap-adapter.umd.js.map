{"version":3,"file":"atlasmap-adapter.umd.js","sources":["../src/DataMapperAdapter.tsx"],"sourcesContent":["import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n"],"names":["const","runtime","require","polyfills","styles","scripts","vendor","main","DocumentType","InspectionType","DataMapperAdapter","constructor","props","messageChannel","MessageChannel","onIframeLoad","bind","onMessages","componentDidMount","iframe","addEventListener","componentWillReceiveProps","nextProps","_","prevPayload","nextPayload","equal","updateDataMapperApp","shouldComponentUpdate","componentWillUnmount","removeEventListener","messagePort","port1","onmessage","contentWindow","postMessage","port2","event","data","message","onMappings","payload","mappings","documentId","inputDataShape","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDataShape","outputDescription","outputDocumentType","outputInspectionType","outputName","render","srcDoc","extraProps","allowtransparency","React","style","width","height","frameBorder","ref","el","this"],"mappings":"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"}