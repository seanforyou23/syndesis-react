{"code":"export function getValidationState({ form, field }) {\r\n    return form.touched[field.name] && form.errors[field.name]\r\n        ? 'error'\r\n        : form.touched[field.name]\r\n            ? 'success'\r\n            : null;\r\n}\r\n//# sourceMappingURL=helpers.js.map","map":"{\"version\":3,\"file\":\"helpers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/widgets/helpers.ts\"],\"names\":[],\"mappings\":\"AAEA,MAAM,UAAU,kBAAkB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAgB;IAC9D,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;QACxD,CAAC,CAAC,OAAO;QACT,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;YAC1B,CAAC,CAAC,SAAS;YACX,CAAC,CAAC,IAAI,CAAC;AACX,CAAC\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/auto-form/auto-form/src/widgets/helpers.d.ts","writeByteOrderMark":false,"text":"import { IFormControl } from '../models';\r\nexport declare function getValidationState({ form, field }: IFormControl): \"error\" | \"success\" | null;\r\n"}}
