{"code":"import { Button, Grid } from 'patternfly-react';\r\nimport * as React from 'react';\r\nimport { ButtonLink, Container } from '../Layout';\r\nimport './ExtensionImportReview.css';\r\n/**\r\n * A component that displays the extension import review information.\r\n */\r\nexport class ExtensionImportReview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleImport = this.handleImport.bind(this);\r\n    }\r\n    getActions() {\r\n        if (!this.props.actions) {\r\n            return React.createElement(Grid.Col, null);\r\n        }\r\n        return (React.createElement(Container, { \"data-testid\": \"actions-container\" }, this.props.actions\r\n            ? this.props.actions.map((action, index) => index === 0 ? (React.createElement(Grid.Col, { key: 0, dangerouslySetInnerHTML: {\r\n                    __html: this.props.i18nActionText(action.name, action.description),\r\n                } })) : (React.createElement(Grid.Row, { key: index },\r\n                React.createElement(Grid.Col, { key: 0, xs: 2 }),\r\n                React.createElement(Grid.Col, { key: 1, dangerouslySetInnerHTML: {\r\n                        __html: this.props.i18nActionText(action.name, action.description),\r\n                    } }))))\r\n            : null));\r\n    }\r\n    handleImport() {\r\n        return this.props.onImport(this.props.extensionId);\r\n    }\r\n    render() {\r\n        return (React.createElement(Grid, { className: \"extension-import-review__container\" },\r\n            React.createElement(Grid.Row, { \"data-testid\": \"title\", className: \"extension-import-review__title\" }, this.props.i18nTitle),\r\n            React.createElement(Grid.Row, null,\r\n                React.createElement(Grid.Col, { \"data-testid\": \"id-label\", xs: 2, className: \"extension-import-review__propertyLabel\" }, this.props.i18nIdLabel),\r\n                React.createElement(Grid.Col, { \"data-testid\": \"id-value\", className: \"extension-import-review__propertyValue\" }, this.props.extensionId)),\r\n            React.createElement(Grid.Row, null,\r\n                React.createElement(Grid.Col, { \"data-testid\": \"name-label\", xs: 2, className: \"extension-import-review__propertyLabel\" }, this.props.i18nNameLabel),\r\n                React.createElement(Grid.Col, { \"data-testid\": \"name-value\", className: \"extension-import-review__propertyValue\" }, this.props.extensionName)),\r\n            React.createElement(Grid.Row, null,\r\n                React.createElement(Grid.Col, { \"data-testid\": \"description-label\", xs: 2, className: \"extension-import-review__propertyLabel\" }, this.props.i18nDescriptionLabel),\r\n                React.createElement(Grid.Col, { \"data-testid\": \"description-value\", className: \"extension-import-review__propertyValue\" }, this.props.extensionDescription\r\n                    ? this.props.extensionDescription\r\n                    : null)),\r\n            React.createElement(Grid.Row, null,\r\n                React.createElement(Grid.Col, { \"data-testid\": \"type-label\", xs: 2, className: \"extension-import-review__propertyLabel\" }, this.props.i18nTypeLabel),\r\n                React.createElement(Grid.Col, { \"data-testid\": \"type-value\", className: \"extension-import-review__propertyValue\" }, this.props.i18nExtensionTypeMessage)),\r\n            React.createElement(Grid.Row, null,\r\n                React.createElement(Grid.Col, { \"data-testid\": \"actions-label\", xs: 2, className: \"extension-import-review__propertyLabel\" }, this.props.i18nActionsLabel),\r\n                this.getActions()),\r\n            React.createElement(Grid.Row, null,\r\n                React.createElement(Grid.Col, { xsOffset: 2 },\r\n                    React.createElement(Grid.Row, null,\r\n                        React.createElement(Grid.Col, null,\r\n                            React.createElement(Container, { className: \"extension-import-review__buttonBar\" },\r\n                                React.createElement(Button, { \"data-testid\": \"import-button\", bsStyle: \"primary\", onClick: this.handleImport }, this.props.i18nImport),\r\n                                React.createElement(ButtonLink, { \"data-testid\": \"cancel-button\", className: \"extension-import-review__cancelButton\", href: this.props.cancelLink, as: 'default' }, this.props.i18nCancel))))))));\r\n    }\r\n}\r\n//# sourceMappingURL=ExtensionImportReview.js.map","map":"{\"version\":3,\"file\":\"ExtensionImportReview.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Customization/ExtensionImportReview.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/ui/ui/src/Customization/ExtensionImportReview.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport './ExtensionImportReview.css';\r\nexport interface IImportAction {\r\n    description: string;\r\n    name: string;\r\n}\r\nexport interface IExtensionImportReviewProps {\r\n    /**\r\n     * The extension actions.\r\n     */\r\n    actions?: IImportAction[];\r\n    /**\r\n     * The href that will be navigated to when the cancel button is clicked.\r\n     */\r\n    cancelLink: string;\r\n    /**\r\n     * The optional description of the extension.\r\n     */\r\n    extensionDescription?: string;\r\n    /**\r\n     * The ID of the extension.\r\n     */\r\n    extensionId: string;\r\n    /**\r\n     * The name of the extension.\r\n     */\r\n    extensionName: string;\r\n    /**\r\n     * The localized label for the list of actions.\r\n     */\r\n    i18nActionsLabel: string;\r\n    /**\r\n     * The localized text for the cancel button.\r\n     */\r\n    i18nCancel: string;\r\n    /**\r\n     * The localized 'Description' label.\r\n     */\r\n    i18nDescriptionLabel: string;\r\n    /**\r\n     * The localized text identifying the extension type.\r\n     */\r\n    i18nExtensionTypeMessage: string;\r\n    /**\r\n     * The localized 'ID' label.\r\n     */\r\n    i18nIdLabel: string;\r\n    /**\r\n     * The localized text for the import button.\r\n     */\r\n    i18nImport: string;\r\n    /**\r\n     * The localized 'Name' label.\r\n     */\r\n    i18nNameLabel: string;\r\n    /**\r\n     * The localized title.\r\n     */\r\n    i18nTitle: string;\r\n    /**\r\n     * The localized 'Type' label.\r\n     */\r\n    i18nTypeLabel: string;\r\n    /**\r\n     * Obtains a localized message with the action name and description.\r\n     * @param name the action name\r\n     * @param description the action description\r\n     */\r\n    i18nActionText(name: string, description: string): string;\r\n    /**\r\n     * Callback for when the import button is clicked.\r\n     * @param extensionId the ID of the extension being imported/installed\r\n     */\r\n    onImport(extensionId: string): void;\r\n}\r\n/**\r\n * A component that displays the extension import review information.\r\n */\r\nexport declare class ExtensionImportReview extends React.Component<IExtensionImportReviewProps> {\r\n    constructor(props: IExtensionImportReviewProps);\r\n    getActions(): JSX.Element;\r\n    handleImport(): void;\r\n    render(): JSX.Element;\r\n}\r\n"}}
