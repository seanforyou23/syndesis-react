{"code":"import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\r\nimport * as React from 'react';\r\nimport './ListViewToolbar.css';\r\nexport class ListViewToolbar extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.renderInput = () => {\r\n            const { currentFilterType, currentValue } = this.props;\r\n            if (!currentFilterType) {\r\n                return null;\r\n            }\r\n            if (currentFilterType.filterType === 'select') {\r\n                return (React.createElement(Filter.ValueSelector, { filterValues: currentFilterType.filterValues, currentValue: currentValue, onFilterValueSelected: this.props.onFilterValueSelected }));\r\n            }\r\n            else {\r\n                return (React.createElement(FormControl, { type: currentFilterType.filterType, value: currentValue, placeholder: currentFilterType.placeholder, onChange: this.props.onUpdateCurrentValue, onKeyPress: this.props.onValueKeyPress }));\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        return (React.createElement(Toolbar, null,\r\n            React.createElement(Filter, null,\r\n                React.createElement(Filter.TypeSelector, { filterTypes: this.props.filterTypes, currentFilterType: this.props.currentFilterType.title, onFilterTypeSelected: this.props.onSelectFilterType }),\r\n                this.renderInput()),\r\n            React.createElement(Sort, null,\r\n                React.createElement(Sort.TypeSelector, { sortTypes: this.props.sortTypes, currentSortType: this.props.currentSortType, onSortTypeSelected: this.props.onUpdateCurrentSortType }),\r\n                React.createElement(Sort.DirectionSelector, { isNumeric: false, isAscending: this.props.isSortAscending, onClick: this.props.onToggleCurrentSortDirection })),\r\n            React.createElement(Toolbar.RightContent, null, this.props.children),\r\n            React.createElement(Toolbar.Results, null,\r\n                React.createElement(\"h5\", null, this.props.i18nResultsCount),\r\n                this.props.activeFilters && this.props.activeFilters.length > 0 && (React.createElement(React.Fragment, null,\r\n                    React.createElement(Filter.ActiveLabel, null, \"Active Filters:\"),\r\n                    React.createElement(Filter.List, null, this.props.activeFilters.map((item, index) => (React.createElement(Filter.Item, { key: index, onRemove: this.props.onRemoveFilter, filterData: item },\r\n                        item.title,\r\n                        \"=\",\r\n                        item.value)))),\r\n                    React.createElement(\"a\", { onClick: this.props.onClearFilters }, \"Clear All Filters\"))))));\r\n    }\r\n}\r\n//# sourceMappingURL=ListViewToolbar.js.map","map":"{\"version\":3,\"file\":\"ListViewToolbar.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Shared/ListViewToolbar.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AACtE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,uBAAuB,CAAC;AAwD/B,MAAM,OAAO,eAAgB,SAAQ,KAAK,CAAC,SAAgC;IAA3E;;QAiDS,gBAAW,GAAG,GAAG,EAAE;YACxB,MAAM,EAAE,iBAAiB,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YACvD,IAAI,CAAC,iBAAiB,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;YACD,IAAI,iBAAiB,CAAC,UAAU,KAAK,QAAQ,EAAE;gBAC7C,OAAO,CACL,oBAAC,MAAM,CAAC,aAAa,IACnB,YAAY,EAAE,iBAAiB,CAAC,YAAY,EAC5C,YAAY,EAAE,YAAY,EAC1B,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,qBAAqB,GACvD,CACH,CAAC;aACH;iBAAM;gBACL,OAAO,CACL,oBAAC,WAAW,IACV,IAAI,EAAE,iBAAiB,CAAC,UAAU,EAClC,KAAK,EAAE,YAAY,EACnB,WAAW,EAAE,iBAAiB,CAAC,WAAW,EAC1C,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EACzC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,GACtC,CACH,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;IAzEQ,MAAM;QACX,OAAO,CACL,oBAAC,OAAO;YACN,oBAAC,MAAM;gBACL,oBAAC,MAAM,CAAC,YAAY,IAClB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACnC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,EACrD,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,GACnD;gBACD,IAAI,CAAC,WAAW,EAAE,CACZ;YACT,oBAAC,IAAI;gBACH,oBAAC,IAAI,CAAC,YAAY,IAChB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC/B,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC3C,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,uBAAuB,GACtD;gBACF,oBAAC,IAAI,CAAC,iBAAiB,IACrB,SAAS,EAAE,KAAK,EAChB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EACvC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,4BAA4B,GAChD,CACG;YACP,oBAAC,OAAO,CAAC,YAAY,QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAwB;YAClE,oBAAC,OAAO,CAAC,OAAO;gBACd,gCAAK,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAM;gBACrC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,CAClE;oBACE,oBAAC,MAAM,CAAC,WAAW,0BAAqC;oBACxD,oBAAC,MAAM,CAAC,IAAI,QACT,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAmB,EAAE,KAAK,EAAE,EAAE,CAAC,CAC5D,oBAAC,MAAM,CAAC,IAAI,IACV,GAAG,EAAE,KAAK,EACV,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EACnC,UAAU,EAAE,IAAI;wBAEf,IAAI,CAAC,KAAK;;wBAAG,IAAI,CAAC,KAAK,CACZ,CACf,CAAC,CACU;oBACd,2BAAG,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,wBAAuB,CAC3D,CACJ,CACe,CACV,CACX,CAAC;IACJ,CAAC;CA2BF\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/ui/ui/src/Shared/ListViewToolbar.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport './ListViewToolbar.css';\r\nexport interface IFilterValue {\r\n    id: string;\r\n    title: string;\r\n}\r\nexport interface IFilterType {\r\n    id: string;\r\n    filterType: 'select' | 'text' | 'number';\r\n    filterValues?: IFilterValue[];\r\n    placeholder: string;\r\n    title: string;\r\n}\r\nexport interface ISortType {\r\n    id: string;\r\n    isNumeric: boolean;\r\n    title: string;\r\n}\r\nexport interface IActiveFilter {\r\n    title: string;\r\n    value: string;\r\n}\r\nexport interface IListViewToolbarProps {\r\n    activeFilters: IActiveFilter[];\r\n    filterTypes: IFilterType[];\r\n    currentFilterType: IFilterType;\r\n    currentSortType: string;\r\n    currentValue: any;\r\n    isSortAscending: boolean;\r\n    resultsCount: number;\r\n    sortTypes: ISortType[];\r\n    i18nResultsCount: string;\r\n    onUpdateCurrentValue(event: Event): void;\r\n    onValueKeyPress(keyEvent: KeyboardEvent): void;\r\n    onFilterAdded(title: string, value: string): void;\r\n    onSelectFilterType(filterType: IFilterType): void;\r\n    onFilterValueSelected(filterValue: {\r\n        id: string;\r\n        title: string;\r\n    }): void;\r\n    onRemoveFilter(filter: IActiveFilter): void;\r\n    onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\r\n    onToggleCurrentSortDirection(): void;\r\n    onUpdateCurrentSortType(sortType: string): void;\r\n}\r\nexport declare class ListViewToolbar extends React.Component<IListViewToolbarProps> {\r\n    render(): JSX.Element;\r\n    renderInput: () => JSX.Element | null;\r\n}\r\n"}}
