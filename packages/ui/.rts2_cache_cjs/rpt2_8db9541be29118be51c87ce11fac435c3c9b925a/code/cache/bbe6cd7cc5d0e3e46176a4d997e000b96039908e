{"code":"import * as React from 'react';\r\nimport { Container } from '../Layout';\r\n/**\r\n * A component to render a save form, to be used in the integration\r\n * editor. This does *not* build the form itself, form's field should be passed\r\n * as the `children` value.\r\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\r\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\r\n */\r\nexport class IntegrationEditorForm extends React.Component {\r\n    render() {\r\n        return (React.createElement(Container, null,\r\n            React.createElement(\"h1\", null,\r\n                this.props.i18nTitle,\r\n                \" - Choose Action\"),\r\n            React.createElement(\"p\", null, this.props.i18nSubtitle),\r\n            React.createElement(\"form\", { className: \"form-horizontal required-pf\", role: \"form\", onSubmit: this.props.handleSubmit },\r\n                React.createElement(\"div\", { className: \"row row-cards-pf\" },\r\n                    React.createElement(\"div\", { className: \"card-pf\" },\r\n                        this.props.i18nFormTitle && (React.createElement(\"div\", { className: \"card-pf-title\" }, this.props.i18nFormTitle)),\r\n                        React.createElement(\"div\", { className: \"card-pf-body\" },\r\n                            React.createElement(Container, null, this.props.children)))))));\r\n    }\r\n}\r\n//# sourceMappingURL=IntegrationEditorForm.js.map","map":"{\"version\":3,\"file\":\"IntegrationEditorForm.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Integration/IntegrationEditorForm.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAsBtC;;;;;;GAMG;AACH,MAAM,OAAO,qBAAsB,SAAQ,KAAK,CAAC,SAEhD;IACQ,MAAM;QACX,OAAO,CACL,oBAAC,SAAS;YACR;gBAAK,IAAI,CAAC,KAAK,CAAC,SAAS;mCAAsB;YAC/C,+BAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAK;YAChC,8BACE,SAAS,EAAC,6BAA6B,EACvC,IAAI,EAAC,MAAM,EACX,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY;gBAEjC,6BAAK,SAAS,EAAC,kBAAkB;oBAC/B,6BAAK,SAAS,EAAC,SAAS;wBACrB,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAC3B,6BAAK,SAAS,EAAC,eAAe,IAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAO,CAChE;wBACD,6BAAK,SAAS,EAAC,cAAc;4BAC3B,oBAAC,SAAS,QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAa,CACxC,CACF,CACF,CACD,CACG,CACb,CAAC;IACJ,CAAC;CACF\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/ui/ui/src/Integration/IntegrationEditorForm.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nexport interface IIntegrationEditorFormProps {\r\n    /**\r\n     * The internationalized title.\r\n     */\r\n    i18nTitle: string;\r\n    /**\r\n     * The internationalized subtitle.\r\n     */\r\n    i18nSubtitle: string;\r\n    /**\r\n     * The internationalized form title.\r\n     */\r\n    i18nFormTitle?: string;\r\n    /**\r\n     * The callback fired when submitting the form.\r\n     * @param e\r\n     */\r\n    handleSubmit: (e?: any) => void;\r\n}\r\n/**\r\n * A component to render a save form, to be used in the integration\r\n * editor. This does *not* build the form itself, form's field should be passed\r\n * as the `children` value.\r\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\r\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\r\n */\r\nexport declare class IntegrationEditorForm extends React.Component<IIntegrationEditorFormProps> {\r\n    render(): JSX.Element;\r\n}\r\n"}}
