{"code":"import classnames from 'classnames';\r\nimport * as React from 'react';\r\nimport { ButtonLink } from '../Layout';\r\nimport './IntegrationVerticalFlow.css';\r\n/**\r\n * A component to render an expandable container meant to be used to show an\r\n * integration's steps.\r\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\r\n */\r\nexport class IntegrationVerticalFlow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: localStorage.getItem('iec-vertical-flow-expanded') === 'y',\r\n        };\r\n        this.toggleExpanded = this.toggleExpanded.bind(this);\r\n    }\r\n    toggleExpanded() {\r\n        const expanded = !this.state.expanded;\r\n        localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\r\n        this.setState({\r\n            expanded,\r\n        });\r\n    }\r\n    render() {\r\n        return (React.createElement(\"div\", { className: classnames('integration-vertical-flow', {\r\n                'is-expanded': this.state.expanded,\r\n            }) },\r\n            React.createElement(\"div\", { className: \"integration-vertical-flow__body\" }, this.props.children(this.state)),\r\n            React.createElement(\"div\", { className: \"integration-vertical-flow__expand\" },\r\n                React.createElement(ButtonLink, { onClick: this.toggleExpanded }))));\r\n    }\r\n}\r\nIntegrationVerticalFlow.defaultProps = {\r\n    disabled: false,\r\n};\r\n//# sourceMappingURL=IntegrationVerticalFlow.js.map","map":"{\"version\":3,\"file\":\"IntegrationVerticalFlow.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Integration/IntegrationVerticalFlow.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AACvC,OAAO,+BAA+B,CAAC;AAiBvC;;;;GAIG;AACH,MAAM,OAAO,uBAAwB,SAAQ,KAAK,CAAC,SAGlD;IASC,YAAY,KAAoC;QAC9C,KAAK,CAAC,KAAK,CAAC,CAAC;QALR,UAAK,GAAG;YACb,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,KAAK,GAAG;SACrE,CAAC;QAIA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAEM,cAAc;QACnB,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACtC,YAAY,CAAC,OAAO,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACzE,IAAI,CAAC,QAAQ,CAAC;YACZ,QAAQ;SACT,CAAC,CAAC;IACL,CAAC;IAEM,MAAM;QACX,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CAAC,2BAA2B,EAAE;gBACjD,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;aACnC,CAAC;YAEF,6BAAK,SAAS,EAAC,iCAAiC,IAC7C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAC5B;YACN,6BAAK,SAAS,EAAC,mCAAmC;gBAChD,oBAAC,UAAU,IAAC,OAAO,EAAE,IAAI,CAAC,cAAc,GAAI,CACxC,CACF,CACP,CAAC;IACJ,CAAC;;AApCa,oCAAY,GAAG;IAC3B,QAAQ,EAAE,KAAK;CAChB,CAAC\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/ui/ui/src/Integration/IntegrationVerticalFlow.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport './IntegrationVerticalFlow.css';\r\nexport interface IIntegrationVerticalFlowProps {\r\n    /**\r\n     * A render prop that receives the expanded state of the container.\r\n     * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\r\n     */\r\n    children(props: IIntegrationVerticalFlowState): any;\r\n}\r\nexport interface IIntegrationVerticalFlowState {\r\n    /**\r\n     * The container expanded state.\r\n     */\r\n    expanded: boolean;\r\n}\r\n/**\r\n * A component to render an expandable container meant to be used to show an\r\n * integration's steps.\r\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\r\n */\r\nexport declare class IntegrationVerticalFlow extends React.Component<IIntegrationVerticalFlowProps, IIntegrationVerticalFlowState> {\r\n    static defaultProps: {\r\n        disabled: boolean;\r\n    };\r\n    state: {\r\n        expanded: boolean;\r\n    };\r\n    constructor(props: IIntegrationVerticalFlowProps);\r\n    toggleExpanded(): void;\r\n    render(): JSX.Element;\r\n}\r\n"}}
