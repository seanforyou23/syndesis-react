{"code":"import { Row, Table } from 'patternfly-react';\r\nimport * as React from 'react';\r\nexport class ExtensionIntegrationsTable extends React.Component {\r\n    getColumns() {\r\n        const headerFormat = (value) => (React.createElement(Table.Heading, null, value));\r\n        const clickableValueFormat = (value, { rowData }) => {\r\n            // rowData is an Integration type so 'name' property is what makes the integration unique\r\n            const onClick = () => this.onIntegrationSelected(rowData.name);\r\n            return (React.createElement(Table.Cell, null,\r\n                React.createElement(\"a\", { href: \"javascript:void(0)\", onClick: onClick }, value)));\r\n        };\r\n        // Creates 2 columns:\r\n        // 1. first column is integration name\r\n        // 2. second column is optional integration description.\r\n        return [\r\n            {\r\n                cell: {\r\n                    formatters: [clickableValueFormat],\r\n                },\r\n                header: {\r\n                    formatters: [headerFormat],\r\n                    label: this.props.i18nName,\r\n                },\r\n                property: 'name',\r\n            },\r\n            {\r\n                cell: {\r\n                    formatters: [(value) => React.createElement(Table.Cell, null, value)],\r\n                },\r\n                header: {\r\n                    formatters: [headerFormat],\r\n                    label: this.props.i18nDescription,\r\n                },\r\n                property: 'description',\r\n            },\r\n        ];\r\n    }\r\n    onIntegrationSelected(integrationId) {\r\n        this.props.onSelectIntegration(integrationId);\r\n    }\r\n    render() {\r\n        return (React.createElement(\"div\", { className: \"extension-group\" },\r\n            React.createElement(Row, null,\r\n                React.createElement(\"div\", { className: \"col-xs-offset-1 col-xs-11\" },\r\n                    React.createElement(\"p\", null, this.props.i18nUsageMessage),\r\n                    this.props.data.length !== 0 ? (React.createElement(Table.PfProvider, { striped: true, bordered: true, hover: true, columns: this.getColumns() },\r\n                        React.createElement(Table.Header, null),\r\n                        React.createElement(Table.Body, { rows: this.props.data, rowKey: \"name\" }))) : null))));\r\n    }\r\n}\r\n//# sourceMappingURL=ExtensionIntegrationsTable.js.map","map":"{\"version\":3,\"file\":\"ExtensionIntegrationsTable.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Customization/ExtensionIntegrationsTable.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAe/B,MAAM,OAAO,0BAA2B,SAAQ,KAAK,CAAC,SAErD;IACQ,UAAU;QACf,MAAM,YAAY,GAAG,CAAC,KAAa,EAAE,EAAE,CAAC,CACtC,oBAAC,KAAK,CAAC,OAAO,QAAE,KAAK,CAAiB,CACvC,CAAC;QAEF,MAAM,oBAAoB,GAAG,CAC3B,KAAa,EACb,EAAE,OAAO,EAAoB,EAC7B,EAAE;YACF,yFAAyF;YACzF,MAAM,OAAO,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC/D,OAAO,CACL,oBAAC,KAAK,CAAC,IAAI;gBACT,2BAAG,IAAI,EAAC,oBAAoB,EAAC,OAAO,EAAE,OAAO,IAC1C,KAAK,CACJ,CACO,CACd,CAAC;QACJ,CAAC,CAAC;QAEF,qBAAqB;QACrB,sCAAsC;QACtC,wDAAwD;QACxD,OAAO;YACL;gBACE,IAAI,EAAE;oBACJ,UAAU,EAAE,CAAC,oBAAoB,CAAC;iBACnC;gBACD,MAAM,EAAE;oBACN,UAAU,EAAE,CAAC,YAAY,CAAC;oBAC1B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;iBAC3B;gBACD,QAAQ,EAAE,MAAM;aACjB;YACD;gBACE,IAAI,EAAE;oBACJ,UAAU,EAAE,CAAC,CAAC,KAAa,EAAE,EAAE,CAAC,oBAAC,KAAK,CAAC,IAAI,QAAE,KAAK,CAAc,CAAC;iBAClE;gBACD,MAAM,EAAE;oBACN,UAAU,EAAE,CAAC,YAAY,CAAC;oBAC1B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe;iBAClC;gBACD,QAAQ,EAAE,aAAa;aACxB;SACF,CAAC;IACJ,CAAC;IAEM,qBAAqB,CAAC,aAAqB;QAChD,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;IAChD,CAAC;IAEM,MAAM;QACX,OAAO,CACL,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,GAAG;gBACF,6BAAK,SAAS,EAAC,2BAA2B;oBACxC,+BAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAK;oBACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAC9B,oBAAC,KAAK,CAAC,UAAU,IACf,OAAO,EAAE,IAAI,EACb,QAAQ,EAAE,IAAI,EACd,KAAK,EAAE,IAAI,EACX,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE;wBAE1B,oBAAC,KAAK,CAAC,MAAM,OAAG;wBAChB,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAC,MAAM,GAAG,CAClC,CACpB,CAAC,CAAC,CAAC,IAAI,CACJ,CACF,CACF,CACP,CAAC;IACJ,CAAC;CACF\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/ui/ui/src/Customization/ExtensionIntegrationsTable.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nexport interface IExtensionIntegration {\r\n    name: string;\r\n    description: string;\r\n}\r\nexport interface IExtensionIntegrationsTableProps {\r\n    i18nDescription: string;\r\n    i18nName: string;\r\n    i18nUsageMessage: string;\r\n    onSelectIntegration: (integrationId: string) => void;\r\n    data: IExtensionIntegration[];\r\n}\r\nexport declare class ExtensionIntegrationsTable extends React.Component<IExtensionIntegrationsTableProps> {\r\n    getColumns(): {\r\n        cell: {\r\n            formatters: ((value: string, { rowData }: {\r\n                rowData: any;\r\n            }) => JSX.Element)[];\r\n        };\r\n        header: {\r\n            formatters: ((value: string) => JSX.Element)[];\r\n            label: string;\r\n        };\r\n        property: string;\r\n    }[];\r\n    onIntegrationSelected(integrationId: string): void;\r\n    render(): JSX.Element;\r\n}\r\n"}}
