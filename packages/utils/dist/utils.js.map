{"version":3,"file":"utils.js","sources":["../src/getConnectionIcon.ts","../src/key.ts","../src/makeResolver.ts","../src/WithListViewToolbarHelpers.tsx","../src/OptionalIntUtil.ts","../src/WithLoader.tsx","../src/WithRouteData.tsx","../src/WithRouter.tsx"],"sourcesContent":["import { ConnectionOverview, Connector } from '@syndesis/models';\n\nexport function getConnectionIcon(\n  connection: ConnectionOverview | Connector,\n  publicUrl: string | undefined\n): string {\n  return (connection.icon || '').startsWith('data:')\n    ? connection.icon!\n    : `${publicUrl}/icons/${connection.id}.connection.png`;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { reverse } from 'named-urls';\n\nexport interface IRoute {\n  params?: any;\n  state?: any;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param route\n * @param mapper\n */\nexport function makeResolver<T>(route: string, mapper: (data: T) => IRoute) {\n  return (data: T) => {\n    const { params, state } = mapper(data);\n    return {\n      pathname: reverse(route, params),\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.Component<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params as P;\n          const state: S = route.location.state as S;\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n"],"names":["getConnectionIcon","connection","publicUrl","icon","startsWith","id","const","ALPHABET","RANDOMNESS","let","lastTimestamp","key","length","i","Math","floor","random","result","timestamp","Date","getTime","charAt","remainingTimestamp","makeResolver","route","mapper","data","params","state","pathname","reverse","makeResolverNoParams","WithListViewToolbarHelpers","constructor","props","event","setState","currentValue","target","value","keyEvent","this","currentFilterType","onFilterAdded","title","stopPropagation","preventDefault","activeFilters","filterType","filterValue","filter","index","indexOf","updated","slice","isSortAscending","sortType","currentSortType","defaultFilterType","defaultSortType","filterCategory","render","children","onClearFilters","onFilterValueSelected","onRemoveFilter","onSelectFilterType","onToggleCurrentSortDirection","onUpdateCurrentSortType","onUpdateCurrentValue","onValueKeyPress","React","createOptionalInt","present","asInt","optionalIntValue","optional","defaultValue","optionalIntHasValue","WithLoader","loaded","loading","componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","waitTimeout","setTimeout","error","errorChildren","loaderChildren","clearTimeout","window","minWait","undefined","WithRouteData","Route","match","Error","location","WithRouterBase","WithRouter","withRouter"],"mappings":"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"}