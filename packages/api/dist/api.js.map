{"version":3,"file":"api.js","sources":["../src/ApiContext.tsx","../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/callFetch.ts","../src/Fetch.tsx","../src/Stream.tsx","../src/SyndesisFetch.tsx","../src/DVFetch.tsx","../src/ServerEventsContext.tsx","../src/WithIntegrationHelpers.tsx","../src/WithChangeListener.tsx","../src/WithApiConnectors.tsx","../src/WithExtension.tsx","../src/WithExtensionHelpers.tsx","../src/WithExtensionIntegrations.tsx","../src/WithExtensions.tsx","../src/WithIntegrations.tsx","../src/WithMonitoredIntegrations.tsx","../src/WithPolling.tsx","../src/WithIntegrationsMetrics.tsx","../src/WithConnections.tsx","../src/integrationHelpers/helpers.ts","../src/integrationHelpers/serializeIntegration.ts","../src/integrationHelpers/deserializeIntegration.ts","../src/WithConnection.tsx","../src/WithConnectors.tsx","../src/WithServerEvents.tsx","../src/WithViews.tsx","../src/WithVirtualizationHelpers.tsx","../src/WithVirtualization.tsx","../src/WithVirtualizations.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n}: IFetch) {\n  if (includeAccept) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body: contentType.includes('application/json')\n      ? JSON.stringify(body)\n      : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={headers}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flow: number,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * returns an empty integration object.\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  getEmptyIntegration(): Integration;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * updates the name of an integration.\n   *\n   * @param integration\n   * @param name\n   */\n  setName(integration: Integration, name: string): Integration;\n  /**\n   * returns the list of steps of the provided integration.\n   *\n   * @param value\n   * @param flow\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  getSteps(integration: Integration, flow: number): Step[];\n  /**\n   * returns a specific step of the provided integration.\n   *\n   * @param value\n   * @param flow\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  getStep(integration: Integration, flow: number, step: number): Step;\n  /**\n   * returns true if the provided integration can be published; returns false\n   * otherwise.\n   *\n   * @param integration\n   */\n  canPublish(integration: IntegrationOverview): boolean;\n  /**\n   * returns true if the provided integration can be activated; returns false\n   * otherwise.\n   *\n   * @param integration\n   */\n  canActivate(integration: IntegrationOverview): boolean;\n  /**\n   * returns true if the provided integration can be edited; returns false\n   * otherwise.\n   *\n   * @param integration\n   */\n  canEdit(integration: IntegrationOverview): boolean;\n  /**\n   * returns true if the provided integration can be deactivated; returns false\n   * otherwise.\n   *\n   * @param integration\n   */\n  canDeactivate(integration: IntegrationOverview): boolean;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.getEmptyIntegration = this.getEmptyIntegration.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.setName = this.setName.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.getStep = this.getStep.bind(this);\n    this.getSteps = this.getSteps.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flow: number,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      if (!draft.flows) {\n        draft.flows = [];\n      }\n      if (!draft.flows[flow]) {\n        draft.flows[flow] = {\n          id: key(),\n          name: '',\n          steps: [],\n        };\n      }\n      if (!draft.flows[flow].steps) {\n        draft.flows[flow].steps = [];\n      }\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: draft.flows[flow].id,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows[flow].steps!.splice(position, 0, step);\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flow: number,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      if (!draft.flows) {\n        draft.flows = [];\n      }\n      if (!draft.flows[flow]) {\n        draft.flows[flow] = {\n          id: key(),\n          name: '',\n          steps: [],\n        };\n      }\n      if (!draft.flows[flow].steps) {\n        draft.flows[flow].steps = [];\n      }\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: draft.flows[flow].id,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows[flow].steps![position] = step;\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flow: number,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      if (!draft.flows) {\n        draft.flows = [];\n      }\n      if (!draft.flows[flow]) {\n        draft.flows[flow] = {\n          id: key(),\n          name: '',\n          steps: [],\n        };\n      }\n      if (!draft.flows[flow].steps) {\n        draft.flows[flow].steps = [];\n      }\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: draft.flows[flow].id,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      if (draft.flows[flow].steps![position]) {\n        draft.flows[flow].steps![position] = step;\n      } else {\n        draft.flows[flow].steps!.splice(position, 0, step);\n        draft.tags = Array.from(\n          new Set([...(draft.tags || []), connection.id!])\n        );\n      }\n    });\n  }\n\n  public getEmptyIntegration(): Integration {\n    return NEW_INTEGRATION;\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public setName(integration: Integration, name: string): Integration {\n    return produce(integration, nextIntegration => {\n      nextIntegration.name = name;\n    });\n  }\n\n  public getSteps(integration: Integration, flow: number): Step[] {\n    try {\n      return integration.flows![flow].steps!;\n    } catch (e) {\n      throw new Error(`Can't find steps in position flow:${flow}`);\n    }\n  }\n\n  public getStep(integration: Integration, flow: number, step: number): Step {\n    try {\n      return integration.flows![flow].steps![step];\n    } catch (e) {\n      throw new Error(\n        `Can't find a step in position flow:${flow} step:${step}`\n      );\n    }\n  }\n\n  public canPublish(integration: IntegrationOverview) {\n    return integration.currentState !== 'Pending';\n  }\n\n  public canActivate(integration: IntegrationOverview) {\n    return (\n      integration.currentState !== 'Pending' &&\n      integration.currentState !== 'Published'\n    );\n  }\n\n  public canEdit(integration: IntegrationOverview) {\n    return integration.currentState !== 'Pending';\n  }\n\n  public canDeactivate(integration: IntegrationOverview) {\n    return integration.currentState !== 'Unpublished';\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      canActivate: this.canActivate,\n      canDeactivate: this.canDeactivate,\n      canEdit: this.canEdit,\n      canPublish: this.canPublish,\n      getEmptyIntegration: this.getEmptyIntegration,\n      getStep: this.getStep,\n      getSteps: this.getSteps,\n      saveIntegration: this.saveIntegration,\n      setName: this.setName,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [getEmptyIntegration]{@link IWithIntegrationHelpersChildrenProps#getEmptyIntegration}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n * @see [setName]{@link IWithIntegrationHelpersChildrenProps#setName}\n * @see [getSteps]{@link IWithIntegrationHelpersChildrenProps#getSteps}\n * @see [getStep]{@link IWithIntegrationHelpersChildrenProps#getStep}\n * @see [canPublish]{@link IWithIntegrationHelpersChildrenProps#canPublish}\n * @see [canActivate]{@link IWithIntegrationHelpersChildrenProps#canActivate}\n * @see [canEdit]{@link IWithIntegrationHelpersChildrenProps#canEdit}\n * @see [canDeactivate]{@link IWithIntegrationHelpersChildrenProps#canDeactivate}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Uploads the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}/${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './integrationHelpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithEventsState): any;\n}\n\nexport interface IWithEventsState {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<\n  IWithEventsProps,\n  IWithEventsState\n> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  virtualizationId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the virtualization views with the specified identifier.\n * @see [virtualizationId]{@link IWithViewProps#virtualizationId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${\n          this.props.virtualizationId\n        }vdb/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<void> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationsProps {\n  children(props: IFetchState<RestDataService[]>): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n"],"names":["ApiContextDefaultValue","apiUri","dvApiUri","headers","ApiContext","React","const","_Pact","prototype","then","onFulfilled","onRejected","result","state","s","callback","_settle","v","e","o","_this","value","pact","bind","observer","_catch","body","recover","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","done","_wrapYieldedValue","Symbol","asyncIterator","_yield","next","Promise","resolve","returnValue","error","return","throw","reject","callFetch","method","includeAccept","acceptId","accept","includeContentType","contentTypeId","contentType","includeReferrerPolicy","referrerPolicyId","fetch","url","includes","JSON","stringify","cache","credentials","mode","redirect","Fetch","constructor","props","read","data","initialValue","defaultValue","hasData","loading","componentDidMount","componentDidUpdate","prevProps","shouldComponentUpdate","nextProps","nextState","equal","render","children","response","setState","baseUrl","ok","Error","statusText","indexOf","json","deepmerge","text","errorMessage","message","Stream","reader","getReader","textDecoder","TextDecoder","pushData","decode","cancel","componentWillUnmount","SyndesisFetch","stream","FetchOrStream","Consumer","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","NEW_INTEGRATION","name","tags","WithIntegrationHelpersWrapped","addConnection","getEmptyIntegration","saveIntegration","setName","updateConnection","updateOrAddConnection","getStep","getSteps","getActionDescriptor","connectionId","actionId","configuredProperties","integration","connection","action","flow","position","id","actionDescriptor","produce","draft","flows","key","steps","step","descriptor","stepKind","splice","Array","from","Set","nextIntegration","canPublish","currentState","canActivate","canEdit","canDeactivate","WithIntegrationHelpers","apiContext","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","event","filter","WithApiConnectors","changeFilter","change","kind","startsWith","items","totalCount","this","disableUpdates","WithExtension","extensionId","actions","extensionType","schemaVersion","WithExtensionHelpersWrapped","deleteExtension","importExtension","uploadExtension","file","FormData","append","WithExtensionHelpers","WithExtensionIntegrations","WithExtensions","WithIntegrations","WithMonitoredIntegrations","getMonitoredIntegrations","integrations","map","i","monitoring","find","integrationId","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","undefined","WithIntegrationsMetrics","errors","integrationDeploymentMetrics","lastProcessed","Date","now","messages","metricsProvider","start","topIntegrations","getConnectionsForDisplay","connections","c","metadata","getConnectionsWithFromAction","connector","some","pattern","getConnectionsWithToAction","connectorId","transformResponse","connectionsForDisplay","connectionsWithFromAction","connectionsWithToAction","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","a","getActionsWithTo","getConnectionConnector","getConnectorActions","getActionById","getActionSteps","propertyDefinitionSteps","getActionStep","length","getActionStepDefinition","properties","serializeIntegration","btoa","encodeURIComponent","deserializeIntegration","parse","decodeURIComponent","atob","WithConnection","actionsWithFrom","actionsWithTo","WithConnectors","RECONNECT_TIME","WithServerEvents","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","unmounting","close","started","starting","webSocket","eventSource","startConnection","retries","onFailure","reconnectIn","setTimeout","preferredProtocol","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","forEach","postChangeEvent","changeEvent","EventSource","addEventListener","onError","WebSocket","onmessage","onclose","WithViews","virtualizationId","WORKSPACE_ROOT","WithVirtualizationHelpersWrapped","createVirtualization","deleteVirtualization","publishVirtualization","unpublishServiceVdb","virtName","virtDesc","newVirtualization","keng__dataPath","username","keng__id","tko__description","virtualizationName","pubVirtualization","vdbName","WithVirtualizationHelpers","WithVirtualization","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","publishedState","serviceVdbName","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations"],"mappings":"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"}