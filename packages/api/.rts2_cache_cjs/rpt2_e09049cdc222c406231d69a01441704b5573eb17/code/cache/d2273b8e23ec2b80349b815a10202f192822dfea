{"code":"import * as React from 'react';\r\nimport { ServerEventsContext } from './ServerEventsContext';\r\nimport { SyndesisFetch } from './SyndesisFetch';\r\nimport { WithChangeListener } from './WithChangeListener';\r\nexport function getConnectionsForDisplay(connections) {\r\n    return connections.filter(c => !c.metadata || !c.metadata['hide-from-connection-pages']);\r\n}\r\nexport function getConnectionsWithFromAction(connections) {\r\n    return connections.filter(connection => {\r\n        if (!connection.connector) {\r\n            // safety net\r\n            return true;\r\n        }\r\n        return connection.connector.actions.some(action => {\r\n            return action.pattern === 'From';\r\n        });\r\n    });\r\n}\r\nexport function getConnectionsWithToAction(connections) {\r\n    return connections.filter(connection => {\r\n        if (!connection.connector) {\r\n            // safety net\r\n            return true;\r\n        }\r\n        if (connection.connectorId === 'api-provider') {\r\n            // api provider can be used only for From actions\r\n            return false;\r\n        }\r\n        return connection.connector.actions.some(action => {\r\n            return action.pattern === 'To';\r\n        });\r\n    });\r\n}\r\nexport class WithConnections extends React.Component {\r\n    changeFilter(change) {\r\n        return change.kind.startsWith('connection');\r\n    }\r\n    render() {\r\n        return (React.createElement(SyndesisFetch, { url: '/connections', defaultValue: {\r\n                connectionsForDisplay: [],\r\n                connectionsWithFromAction: [],\r\n                connectionsWithToAction: [],\r\n                items: [],\r\n                totalCount: 0,\r\n            } }, ({ read, response }) => {\r\n            if (this.props.disableUpdates) {\r\n                return this.props.children(response);\r\n            }\r\n            return (React.createElement(ServerEventsContext.Consumer, null, ({ registerChangeListener, unregisterChangeListener }) => (React.createElement(WithChangeListener, { read: read, registerChangeListener: registerChangeListener, unregisterChangeListener: unregisterChangeListener, filter: this.changeFilter }, () => this.props.children({\r\n                ...response,\r\n                data: {\r\n                    ...response.data,\r\n                    connectionsForDisplay: getConnectionsForDisplay(response.data.items),\r\n                    connectionsWithFromAction: getConnectionsWithFromAction(response.data.items),\r\n                    connectionsWithToAction: getConnectionsWithToAction(response.data.items),\r\n                },\r\n            })))));\r\n        }));\r\n    }\r\n}\r\n//# sourceMappingURL=WithConnections.js.map","map":"{\"version\":3,\"file\":\"WithConnections.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/WithConnections.tsx\"],\"names\":[],\"mappings\":\"AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAG1D,MAAM,UAAU,wBAAwB,CAAC,WAAiC;IACxE,OAAO,WAAW,CAAC,MAAM,CACvB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAC9D,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,4BAA4B,CAC1C,WAAiC;IAEjC,OAAO,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;QACrC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YACzB,aAAa;YACb,OAAO,IAAI,CAAC;SACb;QACD,OAAO,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChD,OAAO,MAAM,CAAC,OAAO,KAAK,MAAM,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,0BAA0B,CAAC,WAAiC;IAC1E,OAAO,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;QACrC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YACzB,aAAa;YACb,OAAO,IAAI,CAAC;SACb;QACD,IAAI,UAAU,CAAC,WAAW,KAAK,cAAc,EAAE;YAC7C,iDAAiD;YACjD,OAAO,KAAK,CAAC;SACd;QACD,OAAO,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChD,OAAO,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAeD,MAAM,OAAO,eAAgB,SAAQ,KAAK,CAAC,SAAgC;IAClE,YAAY,CAAC,MAAoB;QACtC,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IAC9C,CAAC;IAEM,MAAM;QACX,OAAO,CACL,oBAAC,aAAa,IACZ,GAAG,EAAE,cAAc,EACnB,YAAY,EAAE;gBACZ,qBAAqB,EAAE,EAAE;gBACzB,yBAAyB,EAAE,EAAE;gBAC7B,uBAAuB,EAAE,EAAE;gBAC3B,KAAK,EAAE,EAAE;gBACT,UAAU,EAAE,CAAC;aACd,IAEA,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE;YACtB,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;gBAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACtC;YACD,OAAO,CACL,oBAAC,mBAAmB,CAAC,QAAQ,QAC1B,CAAC,EAAE,sBAAsB,EAAE,wBAAwB,EAAE,EAAE,EAAE,CAAC,CACzD,oBAAC,kBAAkB,IACjB,IAAI,EAAE,IAAI,EACV,sBAAsB,EAAE,sBAAsB,EAC9C,wBAAwB,EAAE,wBAAwB,EAClD,MAAM,EAAE,IAAI,CAAC,YAAY,IAExB,GAAG,EAAE,CACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,GAAG,QAAQ;gBACX,IAAI,EAAE;oBACJ,GAAG,QAAQ,CAAC,IAAI;oBAChB,qBAAqB,EAAE,wBAAwB,CAC7C,QAAQ,CAAC,IAAI,CAAC,KAAK,CACpB;oBACD,yBAAyB,EAAE,4BAA4B,CACrD,QAAQ,CAAC,IAAI,CAAC,KAAK,CACpB;oBACD,uBAAuB,EAAE,0BAA0B,CACjD,QAAQ,CAAC,IAAI,CAAC,KAAK,CACpB;iBACF;aACF,CAAC,CAEe,CACtB,CAC4B,CAChC,CAAC;QACJ,CAAC,CACa,CACjB,CAAC;IACJ,CAAC;CACF\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/api/api/src/WithConnections.d.ts","writeByteOrderMark":false,"text":"import { ConnectionOverview } from '@syndesis/models';\r\nimport * as React from 'react';\r\nimport { IFetchState } from './Fetch';\r\nimport { IChangeEvent } from './WithServerEvents';\r\nexport declare function getConnectionsForDisplay(connections: ConnectionOverview[]): ConnectionOverview[];\r\nexport declare function getConnectionsWithFromAction(connections: ConnectionOverview[]): ConnectionOverview[];\r\nexport declare function getConnectionsWithToAction(connections: ConnectionOverview[]): ConnectionOverview[];\r\nexport interface IConnectionsResponse {\r\n    readonly connectionsForDisplay: ConnectionOverview[];\r\n    readonly connectionsWithToAction: ConnectionOverview[];\r\n    readonly connectionsWithFromAction: ConnectionOverview[];\r\n    readonly items: ConnectionOverview[];\r\n    readonly totalCount: number;\r\n}\r\nexport interface IWithConnectionsProps {\r\n    disableUpdates?: boolean;\r\n    children(props: IFetchState<IConnectionsResponse>): any;\r\n}\r\nexport declare class WithConnections extends React.Component<IWithConnectionsProps> {\r\n    changeFilter(change: IChangeEvent): boolean;\r\n    render(): JSX.Element;\r\n}\r\n"}}
