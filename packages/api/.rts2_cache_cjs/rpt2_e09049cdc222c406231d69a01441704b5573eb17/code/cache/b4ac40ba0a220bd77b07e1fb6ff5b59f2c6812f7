{"code":"import * as React from 'react';\r\nimport { callFetch } from './callFetch';\r\nconst RECONNECT_TIME = 5000;\r\nexport class WithServerEvents extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.starting = false;\r\n        this.started = false;\r\n        this.unmounting = false;\r\n        this.retries = 0;\r\n        this.preferredProtocol = '';\r\n        this.changeListeners = [];\r\n        this.messageListeners = [];\r\n        this.registerChangeListener = this.registerChangeListener.bind(this);\r\n        this.registerMessageListener = this.registerMessageListener.bind(this);\r\n        this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\r\n        this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\r\n    }\r\n    registerChangeListener(listener) {\r\n        this.changeListeners = [...this.changeListeners, listener];\r\n    }\r\n    registerMessageListener(listener) {\r\n        this.messageListeners = [...this.messageListeners, listener];\r\n    }\r\n    unregisterChangeListener(listener) {\r\n        this.changeListeners = this.changeListeners.filter(l => l !== listener);\r\n    }\r\n    unregisterMessageListener(listener) {\r\n        this.messageListeners = this.messageListeners.filter(l => l !== listener);\r\n    }\r\n    async componentDidMount() {\r\n        this.start();\r\n    }\r\n    async componentWillUnmount() {\r\n        this.unmounting = true;\r\n        this.close();\r\n        this.changeListeners = [];\r\n        this.messageListeners = [];\r\n    }\r\n    render() {\r\n        return this.props.children({\r\n            registerChangeListener: this.registerChangeListener,\r\n            registerMessageListener: this.registerMessageListener,\r\n            unregisterChangeListener: this.unregisterChangeListener,\r\n            unregisterMessageListener: this.unregisterMessageListener,\r\n        });\r\n    }\r\n    close() {\r\n        this.started = false;\r\n        this.starting = false;\r\n        if (this.webSocket) {\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n        }\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n        }\r\n    }\r\n    start() {\r\n        this.startConnection(this.retries % 2 === 0);\r\n    }\r\n    onFailure(error) {\r\n        this.close();\r\n        if (this.unmounting) {\r\n            return;\r\n        }\r\n        this.retries++;\r\n        // Initialy retry very quickly.\r\n        let reconnectIn = RECONNECT_TIME;\r\n        if (this.retries < 3) {\r\n            reconnectIn = 1;\r\n        }\r\n        setTimeout(() => {\r\n            // console.log('Reconnecting');\r\n            switch (this.preferredProtocol) {\r\n                // Once we find a protocol that works, keep using it.\r\n                case 'ws':\r\n                    this.startConnection(true);\r\n                    break;\r\n                case 'es':\r\n                    this.startConnection(false);\r\n                    break;\r\n                default:\r\n                    // Keep flipping between WS and ES untill we find one that works.\r\n                    this.startConnection(this.retries % 2 === 0);\r\n                    break;\r\n            }\r\n        }, reconnectIn);\r\n    }\r\n    async startConnection(connectUsingWebSockets) {\r\n        if (this.starting || this.started || this.unmounting) {\r\n            return;\r\n        }\r\n        this.starting = true;\r\n        try {\r\n            const response = await callFetch({\r\n                body: '',\r\n                headers: this.props.headers,\r\n                method: 'POST',\r\n                url: `${this.props.apiUri}/event/reservations`,\r\n            });\r\n            let reservation = await response.json();\r\n            reservation = reservation.data;\r\n            if (connectUsingWebSockets) {\r\n                let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\r\n                wsApiEndpoint += '/event/streams.ws/' + reservation;\r\n                // console.log('Connecting using web socket');\r\n                this.starting = false;\r\n                this.started = true;\r\n                this.connectWebSocket(wsApiEndpoint);\r\n            }\r\n            else {\r\n                this.starting = false;\r\n                this.started = true;\r\n                // console.log('Connecting using server side events');\r\n                this.connectEventSource(this.props.apiUri + '/event/streams/' + reservation);\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.onFailure(error);\r\n            throw error;\r\n        }\r\n    }\r\n    postMessageEvent(messageEvent) {\r\n        this.messageListeners.forEach(listener => {\r\n            listener(messageEvent);\r\n        });\r\n    }\r\n    postChangeEvent(changeEvent) {\r\n        this.changeListeners.forEach(listener => {\r\n            listener(changeEvent);\r\n        });\r\n    }\r\n    connectEventSource(url) {\r\n        this.eventSource = new EventSource(url);\r\n        this.eventSource.addEventListener('message', (event) => {\r\n            this.started = true;\r\n            this.starting = false;\r\n            this.preferredProtocol = 'es';\r\n            // console.log('sse.message: ', event.data);\r\n            this.postMessageEvent(event);\r\n        });\r\n        this.eventSource.addEventListener('change-event', (event) => {\r\n            this.started = true;\r\n            const value = JSON.parse(event.data);\r\n            // console.log('sse.change-event: ', value);\r\n            this.postChangeEvent(value);\r\n        });\r\n        const onError = (event) => {\r\n            // console.log('sse.close: ', event);\r\n            this.onFailure(event);\r\n        };\r\n        this.eventSource.addEventListener('close', onError);\r\n        this.eventSource.addEventListener('error', onError);\r\n        return this.eventSource;\r\n    }\r\n    connectWebSocket(url) {\r\n        this.webSocket = new WebSocket(url);\r\n        this.webSocket.onmessage = event => {\r\n            this.started = true;\r\n            this.starting = false;\r\n            const messageEvent = JSON.parse(event.data);\r\n            switch (messageEvent.event) {\r\n                case 'message':\r\n                    this.preferredProtocol = 'ws';\r\n                    // console.log('ws.message: ', messageEvent.data);\r\n                    this.postMessageEvent(messageEvent);\r\n                    break;\r\n                case 'change-event':\r\n                    const value = JSON.parse(messageEvent.data);\r\n                    // console.log('ws.change-event: ', value);\r\n                    this.postChangeEvent(value);\r\n                    break;\r\n                default:\r\n                // I guess we don't care what happens here...\r\n                // console.log('ws.unknown-message: ', event);\r\n            }\r\n        };\r\n        this.webSocket.onclose = event => {\r\n            // console.log('ws.onclose: ', event);\r\n            this.onFailure(event);\r\n        };\r\n        return this.webSocket;\r\n    }\r\n}\r\n//# sourceMappingURL=WithServerEvents.js.map","map":"{\"version\":3,\"file\":\"WithServerEvents.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/WithServerEvents.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/api/api/src/WithServerEvents.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { IFetchHeaders } from './callFetch';\r\nexport interface IChangeEvent {\r\n    action: string;\r\n    kind: string;\r\n    id: string;\r\n}\r\nexport interface IMessageEvent {\r\n    id: string;\r\n    data: string;\r\n    event: string;\r\n}\r\nexport interface IWithEventsProps {\r\n    apiUri: string;\r\n    headers: IFetchHeaders;\r\n    children(props: IWithEventsState): any;\r\n}\r\nexport interface IWithEventsState {\r\n    registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\r\n    registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\r\n    unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\r\n    unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\r\n}\r\nexport declare class WithServerEvents extends React.Component<IWithEventsProps, IWithEventsState> {\r\n    private starting;\r\n    private started;\r\n    private unmounting;\r\n    private retries;\r\n    private preferredProtocol;\r\n    private eventSource;\r\n    private webSocket;\r\n    private changeListeners;\r\n    private messageListeners;\r\n    constructor(props: IWithEventsProps);\r\n    registerChangeListener(listener: (event: IChangeEvent) => void): void;\r\n    registerMessageListener(listener: (event: IMessageEvent) => void): void;\r\n    unregisterChangeListener(listener: (event: IChangeEvent) => void): void;\r\n    unregisterMessageListener(listener: (event: IMessageEvent) => void): void;\r\n    componentDidMount(): Promise<void>;\r\n    componentWillUnmount(): Promise<void>;\r\n    render(): any;\r\n    private close;\r\n    private start;\r\n    private onFailure;\r\n    private startConnection;\r\n    private postMessageEvent;\r\n    private postChangeEvent;\r\n    private connectEventSource;\r\n    private connectWebSocket;\r\n}\r\n"}}
