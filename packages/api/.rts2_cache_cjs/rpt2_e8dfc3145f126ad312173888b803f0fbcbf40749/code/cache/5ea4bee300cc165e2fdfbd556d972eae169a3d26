{"code":"import * as React from 'react';\r\nimport { ServerEventsContext } from './ServerEventsContext';\r\nimport { SyndesisFetch } from './SyndesisFetch';\r\nimport { WithChangeListener } from './WithChangeListener';\r\n/**\r\n * A component that fetches the integrations that a specified extension is used by.\r\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\r\n */\r\nexport class WithExtensionIntegrations extends React.Component {\r\n    changeFilter(change) {\r\n        return (\r\n        // rerun fetch if there was a change in integrations\r\n        change.kind === 'integration' || change.kind === 'integration-deployment');\r\n    }\r\n    render() {\r\n        return (React.createElement(SyndesisFetch, { url: `/extensions/${this.props.extensionId}/integrations`, defaultValue: [] }, ({ read, response }) => this.props.disableUpdates ? (this.props.children(response)) : (React.createElement(ServerEventsContext.Consumer, null, ({ registerChangeListener, unregisterChangeListener }) => (React.createElement(WithChangeListener, { read: read, registerChangeListener: registerChangeListener, unregisterChangeListener: unregisterChangeListener, filter: this.changeFilter }, () => this.props.children(response)))))));\r\n    }\r\n}\r\n//# sourceMappingURL=WithExtensionIntegrations.js.map","map":"{\"version\":3,\"file\":\"WithExtensionIntegrations.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/WithExtensionIntegrations.tsx\"],\"names\":[],\"mappings\":\"AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAS1D;;;GAGG;AACH,MAAM,OAAO,yBAA0B,SAAQ,KAAK,CAAC,SAEpD;IACQ,YAAY,CAAC,MAAoB;QACtC,OAAO;QACL,oDAAoD;QACpD,MAAM,CAAC,IAAI,KAAK,aAAa,IAAI,MAAM,CAAC,IAAI,KAAK,wBAAwB,CAC1E,CAAC;IACJ,CAAC;IAEM,MAAM;QACX,OAAO,CACL,oBAAC,aAAa,IACZ,GAAG,EAAE,eAAe,IAAI,CAAC,KAAK,CAAC,WAAW,eAAe,EACzD,YAAY,EAAE,EAAE,IAEf,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,CACtB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAC9B,CAAC,CAAC,CAAC,CACF,oBAAC,mBAAmB,CAAC,QAAQ,QAC1B,CAAC,EAAE,sBAAsB,EAAE,wBAAwB,EAAE,EAAE,EAAE,CAAC,CACzD,oBAAC,kBAAkB,IACjB,IAAI,EAAE,IAAI,EACV,sBAAsB,EAAE,sBAAsB,EAC9C,wBAAwB,EAAE,wBAAwB,EAClD,MAAM,EAAE,IAAI,CAAC,YAAY,IAExB,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CACjB,CACtB,CAC4B,CAChC,CAEW,CACjB,CAAC;IACJ,CAAC;CACF\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/api/api/src/WithExtensionIntegrations.d.ts","writeByteOrderMark":false,"text":"import { IntegrationOverview } from '@syndesis/models';\r\nimport * as React from 'react';\r\nimport { IFetchState } from './Fetch';\r\nimport { IChangeEvent } from './WithServerEvents';\r\nexport interface IWithExtensionIntegrationsProps {\r\n    extensionId: string;\r\n    disableUpdates?: boolean;\r\n    children(props: IFetchState<IntegrationOverview[]>): any;\r\n}\r\n/**\r\n * A component that fetches the integrations that a specified extension is used by.\r\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\r\n */\r\nexport declare class WithExtensionIntegrations extends React.Component<IWithExtensionIntegrationsProps> {\r\n    changeFilter(change: IChangeEvent): boolean;\r\n    render(): JSX.Element;\r\n}\r\n"}}
