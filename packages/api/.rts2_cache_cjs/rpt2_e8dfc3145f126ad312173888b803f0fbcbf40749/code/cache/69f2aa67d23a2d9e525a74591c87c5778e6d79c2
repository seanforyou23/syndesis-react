{"code":"import * as React from 'react';\r\nimport { ApiContext } from './ApiContext';\r\nimport { callFetch } from './callFetch';\r\nexport class WithExtensionHelpersWrapped extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteExtension = this.deleteExtension.bind(this);\r\n        this.importExtension = this.importExtension.bind(this);\r\n        this.uploadExtension = this.uploadExtension.bind(this);\r\n    }\r\n    /**\r\n     * Deletes the extension with the specified identifier.\r\n     * @param extensionId the ID of the extension being deleted\r\n     */\r\n    async deleteExtension(extensionId) {\r\n        const response = await callFetch({\r\n            headers: this.props.headers,\r\n            method: 'DELETE',\r\n            url: `${this.props.apiUri}/extensions/${extensionId}`,\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Imports the extension with the specified identifier.\r\n     * @param extensionId the ID of the extension being imported\r\n     */\r\n    async importExtension(extensionId) {\r\n        const response = await callFetch({\r\n            headers: this.props.headers,\r\n            method: 'POST',\r\n            url: `${this.props.apiUri}/extensions/${extensionId}/install`,\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Uploads the extension with the specified identifier or creates a new extension if there is no identifier.\r\n     * @param extensionId the ID of the extension being uploaded\r\n     */\r\n    async uploadExtension(file, extensionId) {\r\n        const data = new FormData();\r\n        data.append('file', file, file.name);\r\n        const url = `${this.props.apiUri}/extensions`;\r\n        const response = await callFetch({\r\n            body: data,\r\n            contentType: 'multipart/form-data',\r\n            headers: this.props.headers,\r\n            includeAccept: false,\r\n            includeContentType: false,\r\n            includeReferrerPolicy: false,\r\n            method: 'POST',\r\n            url: extensionId ? `${url}/${extensionId}` : url,\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n        return (await response.json());\r\n    }\r\n    render() {\r\n        return this.props.children({\r\n            deleteExtension: this.deleteExtension,\r\n            importExtension: this.importExtension,\r\n            uploadExtension: this.uploadExtension,\r\n        });\r\n    }\r\n}\r\nexport const WithExtensionHelpers = props => (React.createElement(ApiContext.Consumer, null, apiContext => React.createElement(WithExtensionHelpersWrapped, Object.assign({}, props, apiContext))));\r\n//# sourceMappingURL=WithExtensionHelpers.js.map","map":"{\"version\":3,\"file\":\"WithExtensionHelpers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/WithExtensionHelpers.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/api/api/src/WithExtensionHelpers.d.ts","writeByteOrderMark":false,"text":"import { Extension } from '@syndesis/models';\r\nimport * as React from 'react';\r\nimport { IApiContext } from './ApiContext';\r\nexport interface IWithExtensionHelpersChildrenProps {\r\n    deleteExtension(extensionId: string): Promise<void>;\r\n    importExtension(extensionId: string): Promise<void>;\r\n    uploadExtension(file: File, extensionId?: string): Promise<Extension>;\r\n}\r\nexport interface IWithExtensionHelpersProps {\r\n    children(props: IWithExtensionHelpersChildrenProps): any;\r\n}\r\nexport declare class WithExtensionHelpersWrapped extends React.Component<IWithExtensionHelpersProps & IApiContext> {\r\n    constructor(props: IWithExtensionHelpersProps & IApiContext);\r\n    /**\r\n     * Deletes the extension with the specified identifier.\r\n     * @param extensionId the ID of the extension being deleted\r\n     */\r\n    deleteExtension(extensionId: string): Promise<void>;\r\n    /**\r\n     * Imports the extension with the specified identifier.\r\n     * @param extensionId the ID of the extension being imported\r\n     */\r\n    importExtension(extensionId: string): Promise<void>;\r\n    /**\r\n     * Uploads the extension with the specified identifier or creates a new extension if there is no identifier.\r\n     * @param extensionId the ID of the extension being uploaded\r\n     */\r\n    uploadExtension(file: File, extensionId?: string): Promise<Extension>;\r\n    render(): any;\r\n}\r\nexport declare const WithExtensionHelpers: React.FunctionComponent<IWithExtensionHelpersProps>;\r\n"}}
