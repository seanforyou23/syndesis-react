{"code":"export function getActionsWithFrom(actions = []) {\r\n    return actions.filter(a => a.pattern === 'From');\r\n}\r\nexport function getActionsWithTo(actions = []) {\r\n    return actions.filter(a => a.pattern === 'To');\r\n}\r\nexport function getConnectionConnector(connection) {\r\n    if (!connection.connector) {\r\n        throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\r\n    }\r\n    return connection.connector;\r\n}\r\nexport function getConnectorActions(connector) {\r\n    return connector.actions;\r\n}\r\nexport function getActionById(actions, actionId) {\r\n    const action = actions.find(a => a.id === actionId);\r\n    if (!action) {\r\n        throw Error(`FATAL: Action ${actionId} not found`);\r\n    }\r\n    return action;\r\n}\r\nexport function getActionDescriptor(action) {\r\n    if (!action.descriptor) {\r\n        throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\r\n    }\r\n    return action.descriptor;\r\n}\r\nexport function getActionSteps(descriptor) {\r\n    if (!descriptor.propertyDefinitionSteps) {\r\n        throw Error(`FATAL: Descriptor doesn't have any definition`);\r\n    }\r\n    return descriptor.propertyDefinitionSteps;\r\n}\r\nexport function getActionStep(steps, step) {\r\n    if (step > steps.length - 1) {\r\n        throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\r\n    }\r\n    return steps[step];\r\n}\r\nexport function getActionStepDefinition(step) {\r\n    if (!step.properties) {\r\n        throw Error(`FATAL: Step ${step} does not have valid properties`);\r\n    }\r\n    return step.properties;\r\n}\r\n//# sourceMappingURL=helpers.js.map","map":"{\"version\":3,\"file\":\"helpers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/integrationHelpers/helpers.ts\"],\"names\":[],\"mappings\":\"AASA,MAAM,UAAU,kBAAkB,CAAC,UAAoB,EAAE;IACvD,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC;AACnD,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,UAAoB,EAAE;IACrD,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,sBAAsB,CACpC,UAA8B;IAE9B,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;QACzB,MAAM,KAAK,CAAC,qBAAqB,UAAU,CAAC,EAAE,2BAA2B,CAAC,CAAC;KAC5E;IACD,OAAO,UAAU,CAAC,SAAS,CAAC;AAC9B,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,SAAoB;IACtD,OAAO,SAAS,CAAC,OAAO,CAAC;AAC3B,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,OAAiB,EAAE,QAAgB;IAC/D,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC;IACpD,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,KAAK,CAAC,iBAAiB,QAAQ,YAAY,CAAC,CAAC;KACpD;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,MAAc;IAChD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;QACtB,MAAM,KAAK,CAAC,iBAAiB,MAAM,CAAC,EAAE,8BAA8B,CAAC,CAAC;KACvE;IACD,OAAO,MAAM,CAAC,UAAU,CAAC;AAC3B,CAAC;AAED,MAAM,UAAU,cAAc,CAC5B,UAA4B;IAE5B,IAAI,CAAC,UAAU,CAAC,uBAAuB,EAAE;QACvC,MAAM,KAAK,CAAC,+CAA+C,CAAC,CAAC;KAC9D;IACD,OAAO,UAAU,CAAC,uBAAuB,CAAC;AAC5C,CAAC;AAED,MAAM,UAAU,aAAa,CAC3B,KAA6B,EAC7B,IAAY;IAEZ,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QAC3B,MAAM,KAAK,CAAC,eAAe,IAAI,yCAAyC,CAAC,CAAC;KAC3E;IACD,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;AACrB,CAAC;AAED,MAAM,UAAU,uBAAuB,CACrC,IAA0B;IAI1B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;QACpB,MAAM,KAAK,CAAC,eAAe,IAAI,iCAAiC,CAAC,CAAC;KACnE;IACD,OAAO,IAAI,CAAC,UAAU,CAAC;AACzB,CAAC\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/api/api/src/integrationHelpers/helpers.d.ts","writeByteOrderMark":false,"text":"import { Action, ActionDescriptor, ActionDescriptorStep, ConfigurationProperty, ConnectionOverview, Connector } from '@syndesis/models';\r\nexport declare function getActionsWithFrom(actions?: Action[]): Action[];\r\nexport declare function getActionsWithTo(actions?: Action[]): Action[];\r\nexport declare function getConnectionConnector(connection: ConnectionOverview): Connector;\r\nexport declare function getConnectorActions(connector: Connector): Action[];\r\nexport declare function getActionById(actions: Action[], actionId: string): Action;\r\nexport declare function getActionDescriptor(action: Action): ActionDescriptor;\r\nexport declare function getActionSteps(descriptor: ActionDescriptor): ActionDescriptorStep[];\r\nexport declare function getActionStep(steps: ActionDescriptorStep[], step: number): ActionDescriptorStep;\r\nexport declare function getActionStepDefinition(step: ActionDescriptorStep): {\r\n    [name: string]: ConfigurationProperty;\r\n};\r\n"}}
