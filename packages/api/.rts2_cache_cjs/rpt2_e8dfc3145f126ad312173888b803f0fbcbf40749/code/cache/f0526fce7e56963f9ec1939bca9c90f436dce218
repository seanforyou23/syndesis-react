{"code":"import * as React from 'react';\r\nimport { SyndesisFetch } from './SyndesisFetch';\r\n/**\r\n * A component that fetches the extension with the specified identifier.\r\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\r\n */\r\nexport class WithExtension extends React.Component {\r\n    render() {\r\n        return (React.createElement(SyndesisFetch, { url: `/extensions/${this.props.extensionId}`, defaultValue: {\r\n                actions: [],\r\n                extensionType: 'Steps',\r\n                name: '',\r\n                schemaVersion: '',\r\n            }, initialValue: this.props.initialValue }, ({ response }) => this.props.children(response)));\r\n    }\r\n}\r\n//# sourceMappingURL=WithExtension.js.map","map":"{\"version\":3,\"file\":\"WithExtension.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/WithExtension.tsx\"],\"names\":[],\"mappings\":\"AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAQhD;;;GAGG;AACH,MAAM,OAAO,aAAc,SAAQ,KAAK,CAAC,SAA8B;IAC9D,MAAM;QACX,OAAO,CACL,oBAAC,aAAa,IACZ,GAAG,EAAE,eAAe,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAC5C,YAAY,EAAE;gBACZ,OAAO,EAAE,EAAE;gBACX,aAAa,EAAE,OAAO;gBACtB,IAAI,EAAE,EAAE;gBACR,aAAa,EAAE,EAAE;aAClB,EACD,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,IAEpC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAClC,CACjB,CAAC;IACJ,CAAC;CACF\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/api/api/src/WithExtension.d.ts","writeByteOrderMark":false,"text":"import { Extension } from '@syndesis/models';\r\nimport * as React from 'react';\r\nimport { IFetchState } from './Fetch';\r\nexport interface IWithExtensionProps {\r\n    extensionId: string;\r\n    initialValue?: Extension;\r\n    children(props: IFetchState<Extension>): any;\r\n}\r\n/**\r\n * A component that fetches the extension with the specified identifier.\r\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\r\n */\r\nexport declare class WithExtension extends React.Component<IWithExtensionProps> {\r\n    render(): JSX.Element;\r\n}\r\n"}}
