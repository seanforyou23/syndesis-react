{"code":"import { key } from '@syndesis/utils';\r\nimport produce from 'immer';\r\nimport * as React from 'react';\r\nimport { ApiContext } from './ApiContext';\r\nimport { callFetch } from './callFetch';\r\nexport const NEW_INTEGRATION = {\r\n    name: '',\r\n    tags: [],\r\n};\r\nexport class WithIntegrationHelpersWrapped extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addConnection = this.addConnection.bind(this);\r\n        this.getEmptyIntegration = this.getEmptyIntegration.bind(this);\r\n        this.saveIntegration = this.saveIntegration.bind(this);\r\n        this.setName = this.setName.bind(this);\r\n        this.updateConnection = this.updateConnection.bind(this);\r\n        this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\r\n        this.getStep = this.getStep.bind(this);\r\n        this.getSteps = this.getSteps.bind(this);\r\n    }\r\n    async getActionDescriptor(connectionId, actionId, configuredProperties) {\r\n        if (configuredProperties) {\r\n            const response = await callFetch({\r\n                body: configuredProperties,\r\n                headers: this.props.headers,\r\n                method: 'POST',\r\n                url: `${this.props.apiUri}/connections/${connectionId}/actions/${actionId}`,\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText);\r\n            }\r\n            return (await response.json());\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    async addConnection(integration, connection, action, flow, position, configuredProperties) {\r\n        const actionDescriptor = await this.getActionDescriptor(connection.id, action.id, configuredProperties);\r\n        return produce(integration, draft => {\r\n            if (!draft.flows) {\r\n                draft.flows = [];\r\n            }\r\n            if (!draft.flows[flow]) {\r\n                draft.flows[flow] = {\r\n                    id: key(),\r\n                    name: '',\r\n                    steps: [],\r\n                };\r\n            }\r\n            if (!draft.flows[flow].steps) {\r\n                draft.flows[flow].steps = [];\r\n            }\r\n            const step = {\r\n                action,\r\n                configuredProperties,\r\n                connection,\r\n                id: draft.flows[flow].id,\r\n            };\r\n            if (actionDescriptor) {\r\n                step.action.descriptor = actionDescriptor;\r\n            }\r\n            step.stepKind = 'endpoint';\r\n            draft.flows[flow].steps.splice(position, 0, step);\r\n            draft.tags = Array.from(new Set([...(draft.tags || []), connection.id]));\r\n        });\r\n    }\r\n    async updateConnection(integration, connection, action, flow, position, configuredProperties) {\r\n        const actionDescriptor = await this.getActionDescriptor(connection.id, action.id, configuredProperties);\r\n        return produce(integration, draft => {\r\n            if (!draft.flows) {\r\n                draft.flows = [];\r\n            }\r\n            if (!draft.flows[flow]) {\r\n                draft.flows[flow] = {\r\n                    id: key(),\r\n                    name: '',\r\n                    steps: [],\r\n                };\r\n            }\r\n            if (!draft.flows[flow].steps) {\r\n                draft.flows[flow].steps = [];\r\n            }\r\n            const step = {\r\n                action,\r\n                configuredProperties,\r\n                connection,\r\n                id: draft.flows[flow].id,\r\n            };\r\n            if (actionDescriptor) {\r\n                step.action.descriptor = actionDescriptor;\r\n            }\r\n            step.stepKind = 'endpoint';\r\n            draft.flows[flow].steps[position] = step;\r\n        });\r\n    }\r\n    async updateOrAddConnection(integration, connection, action, flow, position, configuredProperties) {\r\n        const actionDescriptor = await this.getActionDescriptor(connection.id, action.id, configuredProperties);\r\n        return produce(integration, draft => {\r\n            if (!draft.flows) {\r\n                draft.flows = [];\r\n            }\r\n            if (!draft.flows[flow]) {\r\n                draft.flows[flow] = {\r\n                    id: key(),\r\n                    name: '',\r\n                    steps: [],\r\n                };\r\n            }\r\n            if (!draft.flows[flow].steps) {\r\n                draft.flows[flow].steps = [];\r\n            }\r\n            const step = {\r\n                action,\r\n                configuredProperties,\r\n                connection,\r\n                id: draft.flows[flow].id,\r\n            };\r\n            if (actionDescriptor) {\r\n                step.action.descriptor = actionDescriptor;\r\n            }\r\n            step.stepKind = 'endpoint';\r\n            if (draft.flows[flow].steps[position]) {\r\n                draft.flows[flow].steps[position] = step;\r\n            }\r\n            else {\r\n                draft.flows[flow].steps.splice(position, 0, step);\r\n                draft.tags = Array.from(new Set([...(draft.tags || []), connection.id]));\r\n            }\r\n        });\r\n    }\r\n    getEmptyIntegration() {\r\n        return NEW_INTEGRATION;\r\n    }\r\n    async saveIntegration(integration) {\r\n        const response = await callFetch({\r\n            body: integration,\r\n            headers: this.props.headers,\r\n            method: integration.id ? 'PUT' : 'POST',\r\n            url: integration.id\r\n                ? `${this.props.apiUri}/integrations/${integration.id}`\r\n                : `${this.props.apiUri}/integrations`,\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n        return !integration.id\r\n            ? (await response.json())\r\n            : Promise.resolve(integration);\r\n    }\r\n    setName(integration, name) {\r\n        return produce(integration, nextIntegration => {\r\n            nextIntegration.name = name;\r\n        });\r\n    }\r\n    getSteps(integration, flow) {\r\n        try {\r\n            return integration.flows[flow].steps;\r\n        }\r\n        catch (e) {\r\n            throw new Error(`Can't find steps in position flow:${flow}`);\r\n        }\r\n    }\r\n    getStep(integration, flow, step) {\r\n        try {\r\n            return integration.flows[flow].steps[step];\r\n        }\r\n        catch (e) {\r\n            throw new Error(`Can't find a step in position flow:${flow} step:${step}`);\r\n        }\r\n    }\r\n    canPublish(integration) {\r\n        return integration.currentState !== 'Pending';\r\n    }\r\n    canActivate(integration) {\r\n        return (integration.currentState !== 'Pending' &&\r\n            integration.currentState !== 'Published');\r\n    }\r\n    canEdit(integration) {\r\n        return integration.currentState !== 'Pending';\r\n    }\r\n    canDeactivate(integration) {\r\n        return integration.currentState !== 'Unpublished';\r\n    }\r\n    render() {\r\n        return this.props.children({\r\n            addConnection: this.addConnection,\r\n            canActivate: this.canActivate,\r\n            canDeactivate: this.canDeactivate,\r\n            canEdit: this.canEdit,\r\n            canPublish: this.canPublish,\r\n            getEmptyIntegration: this.getEmptyIntegration,\r\n            getStep: this.getStep,\r\n            getSteps: this.getSteps,\r\n            saveIntegration: this.saveIntegration,\r\n            setName: this.setName,\r\n            updateConnection: this.updateConnection,\r\n            updateOrAddConnection: this.updateOrAddConnection,\r\n        });\r\n    }\r\n}\r\n/**\r\n * This component provides provides through a render propr a number of helper\r\n * functions useful when working with an integration.\r\n *\r\n * Some of these helpers are available also as stand-alone functions\r\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\r\n * methods like `saveIntegration` that can talk with the backend without any\r\n * additional information provided.\r\n *\r\n * Methods that modify an integration return a immutable copy of the original\r\n * object, to reduce the risk of bugs.\r\n *\r\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\r\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\r\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\r\n * @see [getEmptyIntegration]{@link IWithIntegrationHelpersChildrenProps#getEmptyIntegration}\r\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\r\n * @see [setName]{@link IWithIntegrationHelpersChildrenProps#setName}\r\n * @see [getSteps]{@link IWithIntegrationHelpersChildrenProps#getSteps}\r\n * @see [getStep]{@link IWithIntegrationHelpersChildrenProps#getStep}\r\n * @see [canPublish]{@link IWithIntegrationHelpersChildrenProps#canPublish}\r\n * @see [canActivate]{@link IWithIntegrationHelpersChildrenProps#canActivate}\r\n * @see [canEdit]{@link IWithIntegrationHelpersChildrenProps#canEdit}\r\n * @see [canDeactivate]{@link IWithIntegrationHelpersChildrenProps#canDeactivate}\r\n */\r\nexport const WithIntegrationHelpers = props => (React.createElement(ApiContext.Consumer, null, apiContext => React.createElement(WithIntegrationHelpersWrapped, Object.assign({}, props, apiContext))));\r\n//# sourceMappingURL=WithIntegrationHelpers.js.map","map":"{\"version\":3,\"file\":\"WithIntegrationHelpers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/WithIntegrationHelpers.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/api/api/src/WithIntegrationHelpers.d.ts","writeByteOrderMark":false,"text":"import { Action, ActionDescriptor, Connection, Integration, IntegrationOverview, Step } from '@syndesis/models';\r\nimport * as React from 'react';\r\nimport { IApiContext } from './ApiContext';\r\nexport declare const NEW_INTEGRATION: Integration;\r\ndeclare type UpdateOrAddConnection = (integration: Integration, connection: Connection, action: Action, flow: number, position: number, configuredProperties: any) => Promise<Integration>;\r\nexport interface IWithIntegrationHelpersChildrenProps {\r\n    /**\r\n     * adds a step of type connection to the provided integration object.\r\n     *\r\n     * @param integration - the integration object to modify\r\n     * @param connection - the connection object that's been used to set up the\r\n     * step\r\n     * @param action - the action that's been used to set up the step\r\n     * @param flow - the zero-based index of the flow where to add the step\r\n     * @param position - the zero-based index of the steps where to add the step\r\n     * @param configuredProperties - the values configured by the user for the step\r\n     *\r\n     * @todo should we check `flow` and `position` to see if they are valid?\r\n     * @todo perhaps rename it with a better name\r\n     */\r\n    addConnection: UpdateOrAddConnection;\r\n    /**\r\n     * updates a step of type connection to the provided integration object.\r\n     *\r\n     * @param integration - the integration object to modify\r\n     * @param connection - the connection object that's been used to set up the\r\n     * step\r\n     * @param action - the action that's been used to set up the step\r\n     * @param flow - the zero-based index of the flow where to add the step\r\n     * @param position - the zero-based index of the steps where to add the step\r\n     * @param configuredProperties - the values configured by the user for the step\r\n     *\r\n     * @todo perhaps rename it with a better name\r\n     * @todo should we check `flow` and `position` to see if they are valid?\r\n     */\r\n    updateConnection: UpdateOrAddConnection;\r\n    /**\r\n     * updates a step of type connection to the provided integration object if\r\n     * a step exists at the provided `flow` and `position` indexes; a new step is\r\n     * added otherwise.\r\n     *\r\n     * @param integration - the integration object to modify\r\n     * @param connection - the connection object that's been used to set up the\r\n     * step\r\n     * @param action - the action that's been used to set up the step\r\n     * @param flow - the zero-based index of the flow where to add the step\r\n     * @param position - the zero-based index of the steps where to add the step\r\n     * @param configuredProperties - the values configured by the user for the step\r\n     *\r\n     * @todo perhaps rename it with a better name\r\n     * @todo should we check `flow` and `position` to see if they are valid?\r\n     */\r\n    updateOrAddConnection: UpdateOrAddConnection;\r\n    /**\r\n     * returns an empty integration object.\r\n     *\r\n     * @todo make the returned object immutable to avoid uncontrolled changes\r\n     */\r\n    getEmptyIntegration(): Integration;\r\n    /**\r\n     * asynchronously saves the provided integration, returning the saved\r\n     * integration in case of success.\r\n     *\r\n     * @param integration\r\n     *\r\n     * @todo make the returned object immutable to avoid uncontrolled changes\r\n     */\r\n    saveIntegration(integration: Integration): Promise<Integration>;\r\n    /**\r\n     * updates the name of an integration.\r\n     *\r\n     * @param integration\r\n     * @param name\r\n     */\r\n    setName(integration: Integration, name: string): Integration;\r\n    /**\r\n     * returns the list of steps of the provided integration.\r\n     *\r\n     * @param value\r\n     * @param flow\r\n     *\r\n     * @todo make the returned object immutable to avoid uncontrolled changes\r\n     */\r\n    getSteps(integration: Integration, flow: number): Step[];\r\n    /**\r\n     * returns a specific step of the provided integration.\r\n     *\r\n     * @param value\r\n     * @param flow\r\n     *\r\n     * @todo make the returned object immutable to avoid uncontrolled changes\r\n     */\r\n    getStep(integration: Integration, flow: number, step: number): Step;\r\n    /**\r\n     * returns true if the provided integration can be published; returns false\r\n     * otherwise.\r\n     *\r\n     * @param integration\r\n     */\r\n    canPublish(integration: IntegrationOverview): boolean;\r\n    /**\r\n     * returns true if the provided integration can be activated; returns false\r\n     * otherwise.\r\n     *\r\n     * @param integration\r\n     */\r\n    canActivate(integration: IntegrationOverview): boolean;\r\n    /**\r\n     * returns true if the provided integration can be edited; returns false\r\n     * otherwise.\r\n     *\r\n     * @param integration\r\n     */\r\n    canEdit(integration: IntegrationOverview): boolean;\r\n    /**\r\n     * returns true if the provided integration can be deactivated; returns false\r\n     * otherwise.\r\n     *\r\n     * @param integration\r\n     */\r\n    canDeactivate(integration: IntegrationOverview): boolean;\r\n}\r\nexport interface IWithIntegrationHelpersProps {\r\n    children(props: IWithIntegrationHelpersChildrenProps): any;\r\n}\r\nexport declare class WithIntegrationHelpersWrapped extends React.Component<IWithIntegrationHelpersProps & IApiContext> {\r\n    constructor(props: IWithIntegrationHelpersProps & IApiContext);\r\n    getActionDescriptor(connectionId: string, actionId: string, configuredProperties: any): Promise<ActionDescriptor | null>;\r\n    addConnection(integration: Integration, connection: Connection, action: Action, flow: number, position: number, configuredProperties: any): Promise<Integration>;\r\n    updateConnection(integration: Integration, connection: Connection, action: Action, flow: number, position: number, configuredProperties: any): Promise<Integration>;\r\n    updateOrAddConnection(integration: Integration, connection: Connection, action: Action, flow: number, position: number, configuredProperties: any): Promise<Integration>;\r\n    getEmptyIntegration(): Integration;\r\n    saveIntegration(integration: Integration): Promise<Integration>;\r\n    setName(integration: Integration, name: string): Integration;\r\n    getSteps(integration: Integration, flow: number): Step[];\r\n    getStep(integration: Integration, flow: number, step: number): Step;\r\n    canPublish(integration: IntegrationOverview): boolean;\r\n    canActivate(integration: IntegrationOverview): boolean;\r\n    canEdit(integration: IntegrationOverview): boolean;\r\n    canDeactivate(integration: IntegrationOverview): boolean;\r\n    render(): any;\r\n}\r\n/**\r\n * This component provides provides through a render propr a number of helper\r\n * functions useful when working with an integration.\r\n *\r\n * Some of these helpers are available also as stand-alone functions\r\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\r\n * methods like `saveIntegration` that can talk with the backend without any\r\n * additional information provided.\r\n *\r\n * Methods that modify an integration return a immutable copy of the original\r\n * object, to reduce the risk of bugs.\r\n *\r\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\r\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\r\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\r\n * @see [getEmptyIntegration]{@link IWithIntegrationHelpersChildrenProps#getEmptyIntegration}\r\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\r\n * @see [setName]{@link IWithIntegrationHelpersChildrenProps#setName}\r\n * @see [getSteps]{@link IWithIntegrationHelpersChildrenProps#getSteps}\r\n * @see [getStep]{@link IWithIntegrationHelpersChildrenProps#getStep}\r\n * @see [canPublish]{@link IWithIntegrationHelpersChildrenProps#canPublish}\r\n * @see [canActivate]{@link IWithIntegrationHelpersChildrenProps#canActivate}\r\n * @see [canEdit]{@link IWithIntegrationHelpersChildrenProps#canEdit}\r\n * @see [canDeactivate]{@link IWithIntegrationHelpersChildrenProps#canDeactivate}\r\n */\r\nexport declare const WithIntegrationHelpers: React.FunctionComponent<IWithIntegrationHelpersProps>;\r\nexport {};\r\n"}}
