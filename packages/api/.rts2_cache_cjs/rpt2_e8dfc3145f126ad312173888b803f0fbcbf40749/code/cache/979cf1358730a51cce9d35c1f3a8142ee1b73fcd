{"code":"import { callFetch } from './callFetch';\r\nimport { Fetch } from './Fetch';\r\nexport class Stream extends Fetch {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.read = async () => {\r\n            try {\r\n                this.setState({\r\n                    loading: true,\r\n                });\r\n                callFetch({\r\n                    contentType: this.props.contentType,\r\n                    headers: this.props.headers,\r\n                    method: 'GET',\r\n                    url: `${this.props.baseUrl}${this.props.url}`,\r\n                })\r\n                    .then(response => response.body)\r\n                    .then(body => {\r\n                    this.reader = body.getReader();\r\n                    const textDecoder = new TextDecoder('utf-8');\r\n                    const pushData = ({ done, value, }) => {\r\n                        if (done) {\r\n                            this.setState({\r\n                                loading: false,\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                data: [...(this.state.data || []), textDecoder.decode(value)],\r\n                            });\r\n                            this.reader.read().then(pushData);\r\n                        }\r\n                    };\r\n                    this.reader.read().then(pushData);\r\n                });\r\n            }\r\n            catch (e) {\r\n                this.setState({\r\n                    error: true,\r\n                    errorMessage: e.message,\r\n                    loading: false,\r\n                });\r\n            }\r\n        };\r\n        this.onSave = async () => {\r\n            throw new Error(`Can't save from a stream`);\r\n        };\r\n    }\r\n    async componentDidUpdate(prevProps) {\r\n        if (prevProps.url !== this.props.url) {\r\n            if (this.reader) {\r\n                this.reader.cancel();\r\n            }\r\n            this.read();\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        if (this.reader) {\r\n            this.reader.cancel();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Stream.js.map","map":"{\"version\":3,\"file\":\"Stream.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/Stream.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,KAAK,EAAe,MAAM,SAAS,CAAC;AAE7C,MAAM,OAAO,MAAO,SAAQ,KAAe;IAA3C;;QAkBS,SAAI,GAAG,KAAK,IAAI,EAAE;YACvB,IAAI;gBACF,IAAI,CAAC,QAAQ,CAAC;oBACZ,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBAEH,SAAS,CAAC;oBACR,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;oBACnC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;oBAC3B,MAAM,EAAE,KAAK;oBACb,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;iBAC9C,CAAC;qBACC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;qBAC/B,IAAI,CAAC,IAAI,CAAC,EAAE;oBACX,IAAI,CAAC,MAAM,GAAG,IAAK,CAAC,SAAS,EAAE,CAAC;oBAChC,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;oBAC7C,MAAM,QAAQ,GAAG,CAAC,EAChB,IAAI,EACJ,KAAK,GAIN,EAAE,EAAE;wBACH,IAAI,IAAI,EAAE;4BACR,IAAI,CAAC,QAAQ,CAAC;gCACZ,OAAO,EAAE,KAAK;6BACf,CAAC,CAAC;yBACJ;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC;gCACZ,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;6BAC9D,CAAC,CAAC;4BAEH,IAAI,CAAC,MAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBACpC;oBACH,CAAC,CAAC;oBAEF,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;aACN;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,QAAQ,CAAC;oBACZ,KAAK,EAAE,IAAI;oBACX,YAAY,EAAE,CAAC,CAAC,OAAO;oBACvB,OAAO,EAAE,KAAK;iBACf,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;QAEK,WAAM,GAAG,KAAK,IAAI,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC,CAAC;IACJ,CAAC;IAjEQ,KAAK,CAAC,kBAAkB,CAAC,SAAgC;QAC9D,IAAI,SAAS,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YACpC,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;aACtB;YACD,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;IACH,CAAC;IAEM,oBAAoB;QACzB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;SACtB;IACH,CAAC;CAoDF\"}","dts":{"name":"/Users/mspaxman/code/workingrepos/seanforyou23-syndesis-react-poc/packages/api/api/src/Stream.d.ts","writeByteOrderMark":false,"text":"import { Fetch, IFetchProps } from './Fetch';\r\nexport declare class Stream extends Fetch<string[]> {\r\n    protected reader: ReadableStreamReader | undefined;\r\n    componentDidUpdate(prevProps: IFetchProps<string[]>): Promise<void>;\r\n    componentWillUnmount(): void;\r\n    read: () => Promise<void>;\r\n    onSave: () => Promise<never>;\r\n}\r\n"}}
